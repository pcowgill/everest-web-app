{"version":3,"sources":["images/EverestPerson.svg","components/presentational/Project.tsx","pages/About.tsx","components/presentational/StyledLink.tsx","constants/projects.tsx","helpers/helpers.ts","components/stateful/SearchInput.tsx","pages/Home.tsx","components/presentational/Activity.tsx","components/presentational/Web3StatusGeneric.tsx","components/stateful/Web3Status.tsx","hooks/hooks.ts","components/presentational/Confetti.tsx","components/stateful/FormProject.tsx","theme.ts","components/presentational/Spinner.tsx","components/stateful/Web3ReactManager.tsx","pages/CreateListing.tsx","components/presentational/Emoji.tsx","components/presentational/VotingBox.tsx","pages/Proposal.tsx","components/stateful/ProjectWrapper.tsx","pages/Project/Application.tsx","pages/Project/Service.tsx","pages/Project/InfrastructureSingle.tsx","pages/Project/ContentSingle.tsx","components/presentational/InlineStyledLink.tsx","components/stateful/TheGraphFetch.tsx","pages/Proposals.tsx","components/stateful/ManyProjectsWrapper.tsx","types/Category.ts","pages/Projects/Applications.tsx","pages/Projects/Services.tsx","pages/Projects/Infrastructure.tsx","pages/Projects/Content.tsx","components/presentational/NavBar.tsx","web3-connectors/InjectedConnector.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Project","props","twitter","website","name","status","description","twitterUrl","twitterHandleDisplay","variant","target","href","replace","aboutData","category","tagline","type","index","About","StyledLink","theme","useTheme","to","className","css","colors","primary","tertiary","p","fontWeight","color","children","applicationTypes","infrastructureTypes","serviceTypes","contentTypes","projectList","projectSubtypes","services","infrastructure","content","applications","getProjectsByCategory","projectCategory","filter","project","toLowerCase","includes","getProjectByIndex","getManyProjectsByIndex","getOpenProposals","getProjectSubtypes","isAddress","value","ethers","utils","getAddress","SearchInput","useState","searchText","setSearchText","searchResults","setSearchResults","handleNewSearchText","filterProjectsResult","maxResults","slice","filterProjects","console","log","onChange","e","map","key","getUserFacingSlug","projectName","Home","src","everestPerson","sx","width","borderRadius","flexWrap","mx","px","py","bg","Activity","size","otherProps","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","Web3StatusGeneric","styled","button","Connector","Connectors","Text","NetworkIcon","web3InitialState","error","undefined","WEB3_ERROR","web3Reducer","state","payload","Error","Web3Status","useWeb3Context","account","active","connectorName","setConnector","ENSName","address","library","setENSName","useEffect","stale","a","lookupAddress","useENSName","useReducer","web3Error","dispatch","setError","onClick","window","ethereum","web3","suppressAndThrowErrors","code","errorCodes","UNSUPPORTED_NETWORK","setConnectorAsync","accountPoll","setInterval","providers","Web3Provider","listAccounts","length","listAccountsAndHandleWhenZero","clearInterval","on","removeListener","tryToActivateMetaMask","digits","substring","shortenAddress","Confetti","start","useWindowSize","secondary","_variant","numberOfPieces","recycle","run","confettiSource","x","y","w","h","initialVelocityX","initialVelocityY","gravity","tweenDuration","wind","FormGeneric","NewProjectSchema","Yup","shape","min","max","required","url","StyledBox","my","LabelBox","htmlFor","label","ErrorBox","component","StyledTextFieldBox","placeholder","muted","id","StyledTextAreaFieldBox","FormProject","submitted","setSubmitted","initialValues","validationSchema","onSubmit","values","actions","setSubmitting","render","isSubmitting","flexDirection","justifyContent","msg","disabled","mr","preset","text","background","gray","highlight","dimmed","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","space","sizes","avatar","radii","default","circle","shadows","card","fontFamily","lineHeight","display","fontSize","caps","textTransform","letterSpacing","variants","boxShadow","link","textDecoration","nav","buttons","outline","styles","root","rotate","keyframes","Spinner","img","MessageWrapper","div","Message","h2","tryToSetConnector","tryToSetConnectorAsync","Web3ReactManager","shouldPreventRender","isMobile","accounts","connectToMetaMask","unsetForWrongNetwork","setShowLoader","timeout","setTimeout","clearTimeout","CreateListing","fallback","Emoji","role","aria-label","aria-hidden","symbol","VotingBox","expirationDatetime","tokensCommitted","tokensToVoteWith","opacity","Proposal","slug","useParams","proposal","alignItems","ProjectWrapper","Application","Service","InfrastructureSingle","ContentSingle","InlineStyledLink","DOMAINS","gql","TheGraphFetch","useQuery","loading","Proposals","match","Category","initialState","defi","daos","games","social","dex","collectibles","developmentframework","sidechains","userauthentication","statechannels","onboarding","testing","audits","development","legal","design","accounting","pr","podcasts","wikis","events","forums","news","getNonUserFacingSlug","filterReducer","action","newState","indexOf","ProjectsWrapper","projectSubtype","initialStateForCategory","checked","actionName","Applications","location","URLSearchParams","search","get","APPLICATIONS","Services","SERVICES","Infrastructure","INFRASTRUCTURE","Content","CONTENT","widths","verticalSpacing","widthsFinalElement","widthsFinalElementLargeScreen","WrappedLink","pt","NavBar","mt","InjectedConnector","args","runOnDeactivation","networkChangedHandler","bind","accountsChangedHandler","isMetaMask","autoRefreshOnNetworkChange","enable","catch","deniedAccessError","ETHEREUM_ACCESS_DENIED","this","push","warn","noWeb3Error","NO_WEB3","currentProvider","provider","unlockRequiredError","UNLOCK_REQUIRED","forEach","runner","networkId","networkIdNumber","Number","updateNetworkId","updateAccount","ErrorCodeMixin","client","ApolloClient","uri","connectors","Injected","supportedNetworks","process","AppRouter","libraryName","path","exact","Boolean","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05f120e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EverestPerson.b83557ef.svg\";","// TODO: Decide whether to fetch data for this project at a higher level and pass into this component, or whehter to fetch it here\n// For now assuming it will be a prop already here\n\nimport React from \"react\";\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nimport { Link } from \"rebass\";\n\nconst Project: React.FC<ProjectInterface> = props => {\n  const { twitter, website, name, status, description } = props;\n  const twitterUrl = `https://twitter.com/${twitter}`;\n  const twitterHandleDisplay = twitter ? `@${twitter}` : \"\";\n  return (\n    <div>\n      <h2>{name === \"Everest\" ? \"About Everest\" : name}</h2>\n      {status === \"voting\" || status === \"queued\" ? <h4>{status}</h4> : \"\"}\n      <p>\n        <b>Description:</b> {description}\n      </p>\n      <p>\n        <b>Website:</b>{\" \"}\n        {name === \"Everest\" ? (\n          \"You're on it dummy\"\n        ) : (\n          <Link variant=\"nav\" target=\"_blank\" href={website}>\n            {website.replace(\"https://\", \"\").replace(\"www.\", \"\")}\n          </Link>\n        )}\n      </p>\n      <p>\n        <b>Twitter:</b>{\" \"}\n        <Link variant=\"nav\" target=\"_blank\" href={twitterUrl}>\n          {twitterHandleDisplay}\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Project from \"../components/presentational/Project\";\n\nconst aboutData = {\n  name: \"Everest\",\n  category: \"applications\",\n  description:\n    \"universally shared ‘yellowpages’ registry for eth community. we use fancy tech like TCRs and bonding curves. we’re hiring. dm @Everest_TCR. we probably won’t respond. if we collaborate, we can line up all our ducks in a row.\",\n  twitter: \"Everest_TCR\",\n  website: \"\",\n  tagline: \"\",\n  type: \"\",\n  index: \"0\"\n};\n\nexport default function About() {\n  return (\n    <Project\n      name={aboutData.name}\n      category={aboutData.category}\n      tagline={aboutData.tagline}\n      website={aboutData.website}\n      twitter={aboutData.twitter}\n      description={aboutData.description}\n      type={aboutData.type}\n      index={aboutData.index}\n    />\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\n\nimport { css } from \"emotion\";\n\nimport { useTheme } from \"emotion-theming\";\n\nexport default function StyledLink(props: any) {\n  const theme: any = useTheme();\n  return (\n    <Link\n      to={props.to}\n      className={css`\n        color: ${theme.colors.primary};\n        font-size: 16px;\n        border-radius: 4px;\n        text-decoration: none;\n        &:hover {\n          color: ${theme.colors.tertiary};\n        }\n      `}\n    >\n      <Text p={2} fontWeight=\"bold\" color=\"primary\">\n        {props.children}\n      </Text>\n    </Link>\n  );\n}\n","export const projectCategories = [\n  \"applications\",\n  \"content\",\n  \"services\",\n  \"infrastructure\"\n];\n\n// Subtypes of each category\n\nexport const applicationTypes = [\n  \"DeFi\",\n  \"DAOs\",\n  \"games\",\n  \"social\",\n  \"DEX\",\n  \"collectibles\"\n];\n\n// TODO: Get clever and handle camelCase or hypens in\n// multi-word categories\n// To achieve that, make this into an array of objects with\n// name and slug keys\nexport const infrastructureTypes = [\n  \"development framework\",\n  \"sidechains\",\n  \"user authentication\",\n  \"state channels\",\n  \"onboarding\",\n  \"testing\"\n];\n\nexport const serviceTypes = [\n  \"audits\",\n  \"development\",\n  \"legal\",\n  \"design\",\n  \"accounting\",\n  \"PR\"\n];\n\nexport const contentTypes = [\"podcasts\", \"wikis\", \"events\", \"forums\", \"news\"];\n\n// The projects themselves:\nconst applications = [\n  {\n    index: \"1\",\n    status: \"approved\",\n    name: \"MetaCartel DAO\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"we like dapps\",\n    website: \"https://www.metacartel.org/\",\n    twitter: \"meta_cartel\",\n    description: \"we like dapps\"\n  },\n  {\n    index: \"2\",\n    status: \"approved\",\n    name: \"PokeMol\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"pocket moloch\",\n    website: \"\",\n    twitter: \"PocketMoloch\",\n    description:\n      \"Open Source Mobile-first @MolochDAO frontend with @abridged_io contract wallets ftw. By @odyssyautomaton\"\n  },\n  {\n    index: \"3\",\n    status: \"approved\",\n    name: \"Compound\",\n    category: \"applications\",\n    type: \"DeFi\",\n    tagline: \"Interest and borrowing, for the open financial system.\",\n    website: \"https://compound.finance/\",\n    twitter: \"compoundfinance\",\n    description:\n      \"Compound is an open-source, autonomous protocol built for developers, to unlock a universe of new financial applications. Interest and borrowing, for the open financial system.\"\n  },\n  {\n    index: \"4\",\n    status: \"approved\",\n    name: \"Mintbase\",\n    category: \"applications\",\n    type: \"collectibles\",\n    tagline: \"Digital assets minted and backed by you\",\n    website: \"https://mintbase.io/\",\n    twitter: \"mintbase\",\n    description: \"Digital assets minted and backed by you\"\n  },\n  {\n    index: \"5\",\n    status: \"approved\",\n    name: \"Pepper 4D\",\n    category: \"applications\",\n    type: \"games\",\n    tagline: \"gang gang gang\",\n    website: \"\",\n    twitter: \"\",\n    description: \"\"\n  },\n  {\n    index: \"6\",\n    status: \"approved\",\n    name: \"FrAnK\",\n    category: \"applications\",\n    type: \"social\",\n    tagline: \"what you looking at bish\",\n    website: \"\",\n    twitter: \"\",\n    description: \"\"\n  },\n  {\n    index: \"7\",\n    status: \"approved\",\n    name: \"YoloRekt\",\n    category: \"applications\",\n    type: \"games\",\n    tagline: \"we're definitely a finance game, not a casino\",\n    website: \"\",\n    twitter: \"\",\n    description: \"\"\n  }\n];\n\nconst infrastructure = [\n  {\n    index: \"8\",\n    status: \"approved\",\n    name: \"The Graph\",\n    category: \"infrastructure\",\n    type: \"indexing\",\n    tagline: \"A query protocol for blockchains\",\n    website: \"https://thegraph.com/\",\n    twitter: \"graphprotocol\",\n    description: \"A query protocol for blockchains\"\n  },\n  {\n    index: \"80\",\n    status: \"approved\",\n    name: \"Connext\",\n    category: \"infrastructure\",\n    type: \"state channels\",\n    tagline:\n      \"An infrastructure layer that scales Ethereum by enabling instant, low cost transactions.\",\n    website: \"https://connext.network/\",\n    twitter: \"ConnextNetwork\",\n    description:\n      \"An infrastructure layer that scales Ethereum by enabling instant, low cost transactions.\"\n  }\n];\n\nconst content = [\n  {\n    index: \"9\",\n    status: \"approved\",\n    name: \"EthHub\",\n    category: \"content\",\n    type: \"information\",\n    tagline: \"EthHub provides research and resources to learn about Ethereum\",\n    website: \"https://ethhub.io/\",\n    twitter: \"ethhub_io\",\n    description:\n      \"EthHub provides research and resources to learn about Ethereum\"\n  },\n  {\n    index: \"90\",\n    status: \"approved\",\n    name: \"Wizard of Dapps\",\n    category: \"content\",\n    type: \"podcasts\",\n    tagline:\n      \"A end user focused podcast about how decentralised applications are built. Tech stacks, business models & user growth. Hosted by @pet3rpan_ & @b_dsylva\",\n    website: \"https://wizardofdapps.fm/\",\n    twitter: \"wizardofdapps\",\n    description:\n      \"A end user focused podcast about how decentralised applications are built. Tech stacks, business models & user growth. Hosted by @pet3rpan_ & @b_dsylva\"\n  }\n];\n\nconst services = [\n  {\n    index: \"10\",\n    status: \"approved\",\n    name: \"OpenZeppelin\",\n    category: \"services\",\n    type: \"audits\",\n    tagline: \"Security audits for distributed systems\",\n    website: \"https://openzeppelin.com/security-audits/\",\n    twitter: \"openzeppelin\",\n    description:\n      \"OpenZeppelin verifies that your distributed systems work as intended by performing an audit. Our engineers fully review your system’s architecture and codebase, and then write a thorough report that includes actionable feedback for every issue found. \"\n  },\n  {\n    index: \"101\",\n    status: \"approved\",\n    name: \"Paul Cowgill\",\n    category: \"services\",\n    type: \"development\",\n    tagline: \"Freelance full-stack Ethereum software engineering\",\n    website: \"https://cowgill.io\",\n    twitter: \"paulcowgill\",\n    description: \"Freelance full-stack Ethereum software engineering\"\n  }\n];\n\n// Proposal status an enum of possible states like\n// rejected, voting, reveal, approved, etc.\nconst proposals = [\n  {\n    index: \"11\",\n    status: \"voting\",\n    name: \"MetaCartel DAO\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"we like dapps\",\n    website: \"https://www.metacartel.org/\",\n    twitter: \"meta_cartel\",\n    description: \"we like dapps\"\n  },\n  {\n    index: \"12\",\n    status: \"queued\",\n    name: \"PokeMol\",\n    category: \"applications\",\n    type: \"DAO\",\n    tagline: \"pocket moloch\",\n    website: \"\",\n    twitter: \"PocketMoloch\",\n    description:\n      \"Open Source Mobile-first @MolochDAO frontend with @abridged_io contract wallets ftw. By @odyssyautomaton\"\n  }\n];\n\n// TODO: Decide if this spread approach is the preferred\n// way to do this concat\nexport const projectList = [\n  ...applications,\n  ...services,\n  ...content,\n  ...infrastructure,\n  ...proposals\n];\n\nexport const projectSubtypes = {\n  services: serviceTypes,\n  infrastructure: infrastructureTypes,\n  content: contentTypes,\n  applications: applicationTypes\n};\n","import { projectList, projectSubtypes } from \"../constants/projects\";\nimport { Category } from \"../types/Category\";\n\nimport { ethers } from \"ethers\";\n\n//////\n// Getters and filters for projects, for now from constants\n// and eventually from The Graph\n//////\n\nexport const getProjectsByCategory = (projectCategory: string) => {\n  return projectList.filter(project => {\n    if (\n      project.category.toLowerCase().includes(projectCategory.toLowerCase())\n    ) {\n      // TODO: Filter out those with a status of \"voting\", \"rejected\", etc.\n      return true;\n    }\n    return false;\n  });\n};\n\nconst getManyProjectsByIndex = (index: string) => {\n  return projectList.filter(project => {\n    if (project.index === index) {\n      return true;\n    }\n    return false;\n  });\n};\n\nexport const getProjectByIndex = (index: string) => {\n  const projectsByIndex = getManyProjectsByIndex(index);\n  // Note: Allows for duplicate indices, which should be impossible.\n  // Consider enforcing uniqueness and erroring out.\n\n  return projectsByIndex[0];\n};\n\nexport const getOpenProposals = () => {\n  return projectList.filter(project => {\n    const { status } = project;\n    if (status === \"voting\" || status === \"queued\") {\n      return true;\n    }\n    return false;\n  });\n};\n\nexport const getProjectSubtypes = (projectCategory: Category) => {\n  return projectSubtypes[projectCategory];\n};\n\n// TODO: Use a less trivial implementation for search\n// that allows for typos, etc.\nexport const filterProjects = (searchText: string, maxResults: number) => {\n  // TODO: Filter out those with a status of \"voting\", \"rejected\", etc.\n  return projectList\n    .filter(project => {\n      if (project.name.toLowerCase().includes(searchText.toLowerCase())) {\n        return true;\n      }\n      if (project.type.includes(searchText)) {\n        return true;\n      }\n      if (project.category.includes(searchText)) {\n        return true;\n      }\n      if (project.description.includes(searchText)) {\n        return true;\n      }\n      if (project.tagline.includes(searchText)) {\n        return true;\n      }\n      if (project.twitter.includes(searchText)) {\n        return true;\n      }\n      if (project.website.includes(searchText)) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n};\n\n//////\n// Handling MetaMask and ethers.js:\n//////\n\nexport function shortenAddress(address: string, digits = 4) {\n  if (!isAddress(address)) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n  return `${address.substring(0, digits + 2)}...${address.substring(\n    42 - digits\n  )}`;\n}\n\nexport function isAddress(value: string | null | undefined) {\n  // TODO: Make sure this is handling both null and undefined\n  if (!value) {\n    return false;\n  }\n  try {\n    return ethers.utils.getAddress(value.toLowerCase());\n  } catch {\n    return false;\n  }\n}\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport StyledLink from \"../presentational/StyledLink\";\n\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nimport { filterProjects } from \"../../helpers/helpers\";\n\n// TODO: Consider extracting the search input component into\n// a presentational component where the function to handle changes\n// is passed in from a parent stateful component that uses useState\nconst SearchInput: FunctionComponent<{}> = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<ProjectInterface[]>([]);\n\n  const handleNewSearchText = (searchText: string) => {\n    const filterProjectsResult = filterProjects(searchText, 8);\n    console.log(filterProjectsResult);\n\n    setSearchText(searchText);\n    // TODO: Get the typing working for all possible\n    // outputs of this function\n    setSearchResults(filterProjectsResult);\n    // TODO: Debounce search to wait for a few seconds before\n    // searching again\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          value={searchText}\n          onChange={e => handleNewSearchText(e.target.value)}\n        />\n        {/* Maybe DRY up the way this list is shown */}\n        {searchResults.map(({ name, category, index }) => {\n          // TODO: Lookup the project type in the right category\n          // to get the right index, or even better, move the\n          // project indexing system to something doesn't have a separate\n          // subindex under each project type\n          return (\n            <p key={index}>\n              <StyledLink to={`/${category}/${index}`}>{name}</StyledLink>\n            </p>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\nimport everestPerson from \"../images/EverestPerson.svg\";\n\nimport { Box, Flex, Text, Image } from \"rebass\";\nimport StyledLink from \"../components/presentational/StyledLink\";\n// TODO: Try using StyledLink from React Router again to see if it fixes 404\n\nimport SearchInput from \"../components/stateful/SearchInput\";\n\nimport {\n  applicationTypes,\n  infrastructureTypes,\n  serviceTypes,\n  contentTypes\n} from \"../constants/projects\";\n\nfunction getUserFacingSlug(projectName: string) {\n  return projectName.toLowerCase().replace(/\\s/g, \"-\");\n}\n\nexport default function Home() {\n  return (\n    <div>\n      <h2>Everest</h2>\n      <Image\n        src={everestPerson}\n        sx={{\n          width: [\"100%\", \"40%\", \"10%\"],\n          borderRadius: 8\n        }}\n      />\n      <SearchInput />\n      {/* TODO: Maybe DRY these four sections up with a map */}\n      <Flex flexWrap=\"wrap\" mx={-2}>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/applications`}>Applications</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {applicationTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <StyledLink\n                  to={`/applications?projectSubtype=${filter}`}\n                  key={name}\n                >\n                  <p>{name}</p>\n                </StyledLink>\n              );\n            })}\n          </Text>\n        </Box>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/infrastructure`}>Infrastructure</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {infrastructureTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <StyledLink\n                  to={`/infrastructure?projectSubtype=${filter}`}\n                  key={name}\n                >\n                  <p>{name} </p>\n                </StyledLink>\n              );\n            })}\n          </Text>\n        </Box>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/services`}>Services</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {serviceTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <StyledLink\n                  to={`/services?projectSubtype=${filter}`}\n                  key={name}\n                >\n                  <p> {name} </p>\n                </StyledLink>\n              );\n            })}\n          </Text>\n        </Box>\n        <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]}>\n          <Text p={1} color=\"background\" bg=\"highlight\">\n            <h3>\n              <StyledLink to={`/content`}>Content</StyledLink>\n            </h3>\n          </Text>\n          <Text p={1} color=\"background\" bg=\"muted\">\n            {contentTypes.map((name, index) => {\n              const filter = getUserFacingSlug(name);\n              return (\n                <StyledLink to={`/content?projectSubtype=${filter}`} key={name}>\n                  <p>{name}</p>\n                </StyledLink>\n              );\n            })}\n          </Text>\n        </Box>\n      </Flex>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Note: Modified from `react-feather`\n// https://github.com/feathericons/react-feather/blob/master/src/icons/activity.js\n\nconst Activity: React.FC<{\n  color?: string;\n  size?: string | number;\n  className?: string;\n}> = props => {\n  const { color = \"currentColor\", size = \"24\", ...otherProps } = props;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...otherProps}\n    >\n      <polyline points=\"22 12 18 12 15 21 9 3 6 12 2 12\" />\n    </svg>\n  );\n};\n\nexport default Activity;\n","import styled from \"@emotion/styled\";\n\nconst Web3StatusGeneric = styled.button`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  font-size: 0.9rem;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 2rem;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\n\nexport default Web3StatusGeneric;\n","import React from \"react\";\n\n// Note: The purpose of this component is to serve as the clickable\n// display of the current web3 status (MetaMask installed and connected\n// to this dapp, etc.)\n\nimport { Connectors } from \"web3-react\";\n\n// Hooks\n// If we were using the jazzicon, we would need useRef here\n// import { useReducer, useEffect, useRef } from \"react\";\nimport { useReducer, useEffect } from \"react\";\nimport { useWeb3Context } from \"web3-react\";\nimport { useENSName } from \"../../hooks/hooks\";\n// import { useAllTransactions } from \"../../contexts/Transactions\";\n\n// Styling\nimport styled from \"@emotion/styled\";\n\n// Types\nimport { Ethereum } from \"../../types/Ethereum\";\nimport { ErrorWithCode } from \"../../types/ErrorWithCode\";\n// TODO: Consider giving this declaration file used for Jazzicon a better name\n// import \"../../declaration\";\n\n// TODO: Upgrade to ethers v5\nimport { ethers } from \"ethers\";\n\n// Components\n// import Jazzicon from \"jazzicon\";\nimport Activity from \"../presentational/Activity\";\nimport Web3StatusGeneric from \"../presentational/Web3StatusGeneric\";\n\n// Helpers\nimport { shortenAddress } from \"../../helpers/helpers\";\n\nconst { Connector } = Connectors;\n\n// TODO: Add styled versions of the generic web3 status component\n\n// TODO: Make sure this is working with the emotion `styled` API\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 0.83rem;\n`;\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`;\n\nconst web3InitialState = {\n  error: undefined\n};\n\nconst WEB3_ERROR = \"WEB3_ERROR\";\n\nfunction web3Reducer(\n  state: any,\n  { type, payload }: { type: any; payload: any }\n) {\n  switch (type) {\n    case WEB3_ERROR: {\n      const { error } = payload;\n      return { ...state, error };\n    }\n    default: {\n      throw Error(`Unexpected action type in web3Reducer reducer: '${type}'.`);\n    }\n  }\n}\n\nexport default function Web3Status() {\n  // TODO: Consider having setError from web3 context settable from here too\n  const { active, account, connectorName, setConnector } = useWeb3Context();\n\n  const ENSName = useENSName(account);\n\n  const [{ error: web3Error }, dispatch] = useReducer(\n    web3Reducer,\n    web3InitialState\n  );\n  function setError(error?: any) {\n    dispatch({ type: WEB3_ERROR, payload: { error } });\n  }\n\n  // TODO: Decide if this effect belongs in this component or over\n  // in Web3ReactManager component where the other effects\n  // related to web3 connection status are\n  useEffect(() => {\n    // janky logic to detect log{ins,outs}...\n\n    const { ethereum }: { ethereum?: Ethereum | undefined } = window;\n\n    // Note: For connectorName, the global variable used below:\n    // - when it's `Injected`, think MetaMask as an example\n\n    if (connectorName === \"Injected\") {\n      // - when it's `Injected`, think MetaMask as an example\n      // In this case, we're mostly worried about logouts\n\n      // ...poll to check the accounts array, and if it's ever 0\n      // i.e. the user logged out, update the connector\n\n      if (!ethereum) {\n        console.log(\"ethereum not defined on window\");\n        setError(new Error(\"Ethereum not defined on window\"));\n        // Note: Can't return early in this case because\n        // we're in the scope of the useEffect, where return has special\n        // meaning\n      } else {\n        const accountPoll = setInterval(() => {\n          console.log(\n            \"Polling number of MetaMask accounts to see if it changed\"\n          );\n          // console.log(\"ethereum\", ethereum);\n          const library = new ethers.providers.Web3Provider(ethereum);\n\n          const listAccountsAndHandleWhenZero = async () => {\n            const accounts = await library.listAccounts();\n            if (accounts.length === 0) {\n              console.log(\"No accounts found\");\n              // Note: Errors will not be thrown here\n              // since we're using the default web3-react error-handling\n              // behavior\n              // Set error for the context here\n              setError(new Error(\"No accounts found\"));\n            }\n          };\n\n          listAccountsAndHandleWhenZero();\n        }, 750);\n\n        return () => {\n          clearInterval(accountPoll);\n        };\n      }\n    } else {\n      // if the injected connector is not yet active...\n\n      // Although the return-early style rather than having deeply nested\n      // if's/else's is nice, given that this `useEffect`\n      // uses conditional return of different cleanup functions depending\n      // on web3/connector state, it's too dangerous to use that style here\n      // and expect future developers not to break it\n\n      if (!ethereum || !ethereum.on || !ethereum.removeListener) {\n        // Noting explicitly that for now we don't have a useEffect\n        // cleanup function for this case because, well, this case\n        // was a no-op already\n        console.log(\n          \"ethereum not defined on window or the API isn't as expected\"\n        );\n      } else {\n        // This tryToActivateMetaMask function is defined so we can use\n        // await syntax inside of it while still returning a cleanup function\n        // for `useEffect` properly\n\n        const tryToActivateMetaMask = async () => {\n          console.log(\n            \"[Web3Status: tryToActivateMetaMask] About to instantiate ethers.js provider\"\n          );\n          // console.log(\"ethereum\", ethereum);\n\n          const library = new ethers.providers.Web3Provider(ethereum);\n\n          console.log(\"Successfully instantiated it as described above\");\n\n          // if calling enable won't pop an approve modal, then try to activate\n          // injected...\n          const accounts = await library.listAccounts();\n          if (accounts.length < 1) {\n            console.log(\"No accounts found\");\n            // returning early since we're in this async function\n            // tryToActivateMetaMask where useEffect won't get confused\n            // that we're returning a cleanup function\n            return;\n          }\n\n          try {\n            // Here's the real meat of this component where the connection\n            // is established\n            await setConnector(\"Injected\", { suppressAndThrowErrors: true });\n          } catch (error) {\n            const { errorCodes } = Connector;\n            const { UNSUPPORTED_NETWORK } = errorCodes;\n\n            if (error.code !== UNSUPPORTED_NETWORK) {\n              console.log(\"Error other than unsupported network\");\n              // Eating the error in this case rather than setting it to the\n              // web3-react context\n            } else {\n              // We want to display the error in the case where it's an\n              // unsupported network\n              setError(error);\n            }\n          }\n        };\n\n        ethereum.on(\"networkChanged\", tryToActivateMetaMask);\n        ethereum.on(\"accountsChanged\", tryToActivateMetaMask);\n\n        // cleanup function for `useEffect`\n        return () => {\n          if (ethereum.removeListener) {\n            ethereum.removeListener(\"networkChanged\", tryToActivateMetaMask);\n            ethereum.removeListener(\"accountsChanged\", tryToActivateMetaMask);\n          }\n        };\n      }\n    }\n  }, [connectorName, setConnector]);\n\n  function onClick() {\n    // TODO: Refactor to handle error states early and potentially to return\n    // early from if's rather than having a bunch of else-ifs\n    if (web3Error) {\n      // If there's already an error state persisted locally, let the\n      // user know about that\n      // TODO: Handle this better by displaying the error to the user\n      // in an actionable way\n      // The error was already set on the reducer for this component\n      // if we're in this code path, so no setError required here\n\n      console.log({ web3Error });\n    } else if (\n      connectorName !== \"Injected\" &&\n      (window.ethereum || window.web3)\n    ) {\n      // Note that when connectorName is defined that connector is active\n      // as far as I understand it\n\n      // active: A flag indicating whether web3-react currently has an connector set\n      // connectorName: The name of the currently active connector\n\n      // So connectorName not being injected does not mean that that\n      // isn't the connector we intend to use - we do intend to use an injected\n      // connector\n      // Here it just means it isn't active yet.\n\n      // Note: This is the happy case when MetaMask is not yet enabled, but\n      // there is an injected web3 present on the window and\n      // the user wants to enable MetaMask.\n      const setConnectorAsync = async () => {\n        try {\n          await setConnector(\"Injected\", { suppressAndThrowErrors: true });\n        } catch (error) {\n          if (error.code === Connector.errorCodes.UNSUPPORTED_NETWORK) {\n            setError(error);\n          } else {\n            console.log(\"Error wasn't unsupported network\");\n          }\n        }\n      };\n      setConnectorAsync();\n    } else {\n      // No previously known error state\n      // Browser has MetaMask enabled already\n      // OR\n      // User doesn't have MetaMask installed yet (far more likely case, given\n      // that would mean a normal user state and not developer error)\n      console.log(\"Hit final else case for a click\");\n      console.log(\"MetaMask is injected and it's active, or (see below)\");\n      console.log(\"OR!\");\n      console.log(\"OR there's no injected provider in the first place\");\n      // TODO: Handle this case better\n      // If user doesn't have MetaMask, prompt them to add it\n      // Although this may already be happening?\n      // TODO: Test this on a browser without MetaMask\n    }\n  }\n\n  // const ref = useRef();\n  // useEffect(() => {\n  //   if (ref.current) {\n  //     // @ts-ignore: Object is possibly 'undefined'\n  //     ref.current.innerHTML = \"\";\n  //     if (account) {\n  //       // @ts-ignore: Object is possibly 'undefined'\n  //       ref.current.appendChild(\n  //         Jazzicon(16, parseInt(account.slice(2, 10), 16))\n  //       );\n  //     }\n  //   }\n  // }, [account, web3Error]);\n\n  function getWeb3Status() {\n    // For error, connect needed, and connected states, potentially\n    // use custom components that style the Web3StatusGeneric component\n    if (web3Error) {\n      // this is ok because we're guaranteed that the error is a wrong network error\n      return (\n        // Error\n        <Web3StatusGeneric onClick={onClick}>\n          <NetworkIcon />\n          <Text>Wrong Network</Text>\n        </Web3StatusGeneric>\n      );\n    } else if (!account) {\n      return (\n        // Connect needed\n        <Web3StatusGeneric onClick={onClick}>\n          <Text>{\"Connect\"}</Text>\n        </Web3StatusGeneric>\n      );\n    } else {\n      return (\n        // Connected - potentially use different component\n        <Web3StatusGeneric onClick={onClick}>\n          <Text>{ENSName || shortenAddress(account)}</Text>\n          {/* TODO: Add Jazzicon if desired */}\n        </Web3StatusGeneric>\n      );\n    }\n  }\n\n  return <div>{getWeb3Status()}</div>;\n}\n","import { useState, useEffect } from \"react\";\nimport { useWeb3Context } from \"web3-react\";\n\nimport { isAddress } from \"../helpers/helpers\";\n\nexport function useENSName(address: string | null | undefined) {\n  const { library } = useWeb3Context();\n\n  const [ENSName, setENSName] = useState();\n\n  useEffect(() => {\n    let stale = false;\n    const lookupAddress = async () => {\n      if (!isAddress(address)) {\n        // Returning from this async function\n        // This isn't the `useEffect` return\n        return;\n      }\n      try {\n        const name: string = await library.lookupAddress(address);\n        if (stale) {\n          return;\n        }\n        if (name) {\n          setENSName(name);\n          return;\n        }\n\n        setENSName(null);\n      } catch {\n        // This hook was originally based off of a similar\n        // hook used in the Uniswap front end\n        // Note that by using async/await style, the catch\n        // here is catching something that wasn't caught\n        // in the Uniswap codebase that used promises\n        setENSName(null);\n      }\n    };\n    lookupAddress();\n\n    // Cleanup function that will be called on\n    // 1. Unmount\n    // 2. Dependency Array Change\n    return () => {\n      stale = true;\n      // @ts-ignore: Expected 1 arguments, but got 0.\n      setENSName();\n    };\n    // Potentially include setENSName below in the array\n  }, [library, address]);\n\n  return ENSName;\n}\n","import React from \"react\";\n\n// TODO: Potentially remove react-use dep\nimport useWindowSize from \"react-use/lib/useWindowSize\";\n\nimport ReactConfetti from \"react-confetti\";\n\nimport { useTheme } from \"emotion-theming\";\n\n// Note: Using a .jsx version of this file\n// as opposed to TypeScript because of:\n// https://github.com/alampros/react-confetti/issues/72\n\nconst Confetti: React.FC<{ start: boolean; variant: string }> = ({\n  start,\n  variant\n}) => {\n  const { width, height } = useWindowSize();\n  const theme: any = useTheme();\n  const { colors } = theme;\n  const { primary, secondary, tertiary } = colors;\n\n  // Variant can be unspecified, \"top\", or \"bottom\"\n  const _variant = variant\n    ? variant\n    : height && width && height > 1.5 * width\n    ? \"bottom\"\n    : variant;\n\n  return start ? (\n    <ReactConfetti\n      colors={[primary, secondary, tertiary]}\n      numberOfPieces={80}\n      recycle={false}\n      run={true}\n      width={width}\n      height={height}\n      confettiSource={{\n        x: width / 2,\n        y:\n          _variant === \"top\"\n            ? height * 0.25\n            : _variant === \"bottom\"\n            ? height * 0.75\n            : height * 0.5,\n        w: 10,\n        h: 10\n      }}\n      initialVelocityX={20}\n      initialVelocityY={40}\n      gravity={0.5}\n      tweenDuration={300}\n      wind={0.1}\n    />\n  ) : null;\n};\n\nexport default Confetti;\n","import React, { useState } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nimport { Flex, Box, Button } from \"rebass\";\n\nimport Web3Status from \"./Web3Status\";\n\nimport { css } from \"emotion\";\n\nimport { useTheme } from \"emotion-theming\";\n\n// Note: Using a .jsx version of this file\n// as opposed to TypeScript because of:\n// https://github.com/alampros/react-confetti/issues/72\nimport Confetti from \"../presentational/Confetti\";\n\nconst FormGeneric: React.FC<{ children: any }> = props => {\n  return <div>{props.children}</div>;\n};\n\nconst NewProjectSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  website: Yup.string()\n    .url()\n    .required(\"Required\"),\n  twitter: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  description: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(1000, \"Too Long!\")\n});\n\nconst StyledBox: React.FC<{ children: any }> = props => {\n  return (\n    <Box width={1} my={2}>\n      {props.children}\n    </Box>\n  );\n};\n\nconst LabelBox: React.FC<{\n  htmlFor: string;\n  label: string;\n}> = ({ htmlFor, label }) => {\n  return (\n    <StyledBox>\n      <b>\n        <label htmlFor={htmlFor}>{label}</label>\n      </b>\n    </StyledBox>\n  );\n};\n\nconst ErrorBox: React.FC<{\n  name: string;\n  component: string;\n}> = ({ name, component }) => {\n  return (\n    <StyledBox>\n      <ErrorMessage name=\"name\" component=\"div\" />\n    </StyledBox>\n  );\n};\n\nconst padding = 1.5;\nconst fontSize = 1;\nconst borderRadius = 0.25;\nconst height = 6.25;\nconst widthText = 15;\nconst widthTextArea = widthText;\n\nconst StyledTextFieldBox: React.FC<{\n  name: string;\n  placeholder: string;\n}> = ({ name, placeholder }) => {\n  const theme: any = useTheme();\n  return (\n    // TODO: Make sure the width isn't wider than the screen on mobile\n    <StyledBox>\n      <Field\n        className={css`\n          padding: ${padding}em;\n          background-color: ${theme.colors.muted};\n          font-size: ${fontSize}em;\n          width: ${widthText}em;\n          border-radius: ${borderRadius}em;\n          &:hover {\n            color: ${theme.colors.tertiary};\n          }\n        `}\n        type=\"text\"\n        id={name}\n        name={name}\n        placeholder={placeholder}\n      />{\" \"}\n    </StyledBox>\n  );\n};\n\nconst StyledTextAreaFieldBox: React.FC<{\n  name: string;\n  placeholder: string;\n}> = ({ name, placeholder }) => {\n  const theme: any = useTheme();\n\n  return (\n    // TODO: DRY this styling up with regular text field input?\n    <StyledBox>\n      <Field\n        className={css`\n          padding: ${padding}em;\n          background-color: ${theme.colors.muted};\n          font-size: ${fontSize}em;\n          height: ${height}em;\n          width: ${widthTextArea}em;\n          border-radius: ${borderRadius}em;\n          &:hover {\n            color: ${theme.colors.tertiary};\n          }\n        `}\n        type=\"text\"\n        component=\"textarea\"\n        id={name}\n        name={name}\n        placeholder={placeholder}\n      />\n    </StyledBox>\n  );\n};\n\nconst FormProject: React.FC<{}> = () => {\n  const initialValues: ProjectInterface = {\n    name: \"\",\n    category: \"\",\n    website: \"https://\",\n    twitter: \"\",\n    description: \"\",\n    type: \"\",\n    tagline: \"\",\n    index: \"\"\n  };\n\n  const [submitted, setSubmitted] = useState(false);\n\n  return (\n    <div>\n      <FormGeneric>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={NewProjectSchema}\n          onSubmit={(values, actions) => {\n            console.log({ values });\n            // alert(JSON.stringify(values, null, 2));\n            setSubmitted(true);\n            actions.setSubmitting(false);\n          }}\n          render={({ status, isSubmitting }) => (\n            <Flex\n              mx={-2}\n              flexWrap=\"wrap\"\n              flexDirection=\"row\"\n              justifyContent=\"center\"\n            >\n              <Form>\n                <Web3Status />\n                <h2>Create a listing</h2>\n                <LabelBox htmlFor=\"name\" label=\"Name\" />\n                <StyledTextFieldBox name=\"name\" placeholder=\"Name\" />\n                <ErrorBox name=\"name\" component=\"div\" />\n                {/* TODO: Add category */}\n\n                <LabelBox htmlFor=\"website\" label=\"Website\" />\n                <StyledTextFieldBox name=\"website\" placeholder=\"https://\" />\n                <ErrorBox name=\"website\" component=\"div\" />\n\n                <LabelBox htmlFor=\"twitter\" label=\"Twitter\" />\n                <StyledTextFieldBox name=\"twitter\" placeholder=\"@jack\" />\n                <ErrorBox name=\"twitter\" component=\"div\" />\n\n                <LabelBox htmlFor=\"description\" label=\"Description\" />\n                <StyledTextAreaFieldBox\n                  name=\"description\"\n                  placeholder=\"This project...\"\n                />\n                <ErrorBox name=\"description\" component=\"div\" />\n\n                <StyledBox>\n                  {status && status.msg && <div>{status.msg}</div>}\n                </StyledBox>\n                <StyledBox>\n                  <Button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    variant=\"primary\"\n                    mr={2}\n                  >\n                    Submit\n                  </Button>\n                </StyledBox>\n              </Form>\n            </Flex>\n          )}\n        />\n      </FormGeneric>\n      <Confetti start={submitted} variant={\"bottom\"} />\n    </div>\n  );\n};\n\nexport default FormProject;\n","// default theme preset\n\nexport const preset = {\n  colors: {\n    text: \"#000\",\n    background: \"#fff\",\n    primary: \"#07c\",\n    secondary: \"#30c\",\n    tertiary: \"#dd0\",\n    muted: \"#f6f6f9\",\n    gray: \"#dddddf\",\n    highlight: \"hsla(205, 100%, 40%, 0.125)\",\n    dimmed: \"hsla(120, 100%, 75%, 0.3)\"\n  },\n  fonts: {\n    body: \"system-ui, sans-serif\",\n    heading: \"inherit\",\n    monospace: \"Menlo, monospace\"\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  sizes: {\n    avatar: 48\n  },\n  radii: {\n    default: 4,\n    circle: 99999\n  },\n  shadows: {\n    card: \"0 0 4px rgba(0, 0, 0, .125)\"\n  },\n  // rebass variants\n  text: {\n    heading: {\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\"\n    },\n    display: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      fontSize: [5, 6, 7]\n    },\n    caps: {\n      textTransform: \"uppercase\",\n      letterSpacing: \"0.1em\"\n    }\n  },\n  variants: {\n    avatar: {\n      width: \"avatar\",\n      height: \"avatar\",\n      borderRadius: \"circle\"\n    },\n    card: {\n      p: 2,\n      bg: \"background\",\n      boxShadow: \"card\"\n    },\n    link: {\n      color: \"primary\",\n      textDecoration: \"none\",\n      \":hover,:focus,.active\": {\n        color: \"secondary\"\n      }\n    },\n    nav: {\n      fontSize: 1,\n      fontWeight: \"bold\",\n      display: \"inline-block\",\n      p: 2,\n      color: \"inherit\",\n      textDecoration: \"none\",\n      \":hover,:focus,.active\": {\n        color: \"primary\"\n      }\n    }\n  },\n  buttons: {\n    primary: {\n      fontSize: 2,\n      fontWeight: \"bold\",\n      color: \"background\",\n      bg: \"primary\",\n      borderRadius: \"default\"\n    },\n    outline: {\n      variant: \"buttons.primary\",\n      color: \"primary\",\n      bg: \"transparent\",\n      boxShadow: \"inset 0 0 2px\"\n    },\n    secondary: {\n      variant: \"buttons.primary\",\n      color: \"background\",\n      bg: \"secondary\"\n    }\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      fontWeight: \"body\",\n      lineHeight: \"body\"\n    }\n  }\n};\n\nexport default preset;\n","import { keyframes } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`;\n\nexport default Spinner;\n","import React from \"react\";\n\n// Note: The purpose of this component is to wrap the whole app with\n// web3 capabilities wherever they may be needed\n\n// Make sure the UI handles these important MetaMask-related\n// errors:\n// - UNSUPPORTED_NETWORK: Thrown if a supportedNetworks array is provided, and the user is not on one of those networks.\n// - ETHEREUM_ACCESS_DENIED: Thrown when a user denies permission for your dApp to access their account.\n// - LEGACY_PROVIDER: Thrown when no global ethereum object is available, only the deprecated web3 object.\n// - NO_WEB3: Thrown when visiting from a non-web3 browser.\n// - UNLOCK_REQUIRED: Thrown when a user's account is locked.\n\nimport { Connectors } from \"web3-react\";\nimport { ethers } from \"ethers\";\n\n// Hooks\nimport { useState, useEffect } from \"react\";\nimport { useWeb3Context } from \"web3-react\";\n\nimport { isMobile } from \"react-device-detect\";\n\n// Styling\nimport styled from \"@emotion/styled\";\n// import { useTheme } from \"emotion-theming\";\n// TODO: Don't use theme import directly\nimport theme from \"../../theme\";\n\n// Types\nimport { ErrorWithCode } from \"../../types/ErrorWithCode\";\nimport { Ethereum } from \"../../types/Ethereum\";\n\n// Components\nimport Spinner from \"../presentational/Spinner\";\nimport Circle from \"../../images/circle.svg\";\n\n// TODO: Extract window typing from this component\ndeclare global {\n  interface Window {\n    ethereum?: Ethereum;\n    web3?: any;\n  }\n}\n\nconst { Connector } = Connectors;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`;\n\n// TODO: Figure out how to use theme as a prop\n// with emotion given that the theme file\n// is rebass-style\nconst Message = styled.h2`\n  color: ${() => theme.colors.gray};\n`;\n\n// TODO: Figure out how to use theme as a prop\n// with emotion given that the theme file\n// is rebass-style\nconst SpinnerWrapper = styled(Spinner)`\n  font-size: 4rem;\n\n  svg {\n    path {\n      color: ${() => theme.colors.primary};\n    }\n  }\n`;\n\nfunction tryToSetConnector(setConnector: any, setError: any) {\n  const tryToSetConnectorAsync = async () => {\n    try {\n      console.log(\"[tryToSetConnector] Trying to set connector to injected\");\n      await setConnector(\"Injected\", { suppressAndThrowErrors: true });\n    } catch (error) {\n      console.log(\n        \"[tryToSetConnector] Setting connector to injected didn't work\",\n        error\n      );\n      setError(error);\n    }\n  };\n\n  tryToSetConnectorAsync();\n}\n\nconst Web3ReactManager: React.FC<{ children: any }> = ({ children }) => {\n  const {\n    active,\n    error,\n    setConnector,\n    setError\n  }: {\n    active: boolean;\n    error?: ErrorWithCode | null;\n    setConnector: any;\n    setError: any;\n  } = useWeb3Context();\n  // control whether or not we render the error, after parsing\n  const shouldPreventRender =\n    error &&\n    error.code &&\n    error.code === Connector.errorCodes.UNSUPPORTED_NETWORK;\n\n  async function connectToMetaMask() {\n    // Note: This function is written using a returning early style\n    // rather than a deeply nested if/else style\n    // Won't execute code below once any conditional is true\n    // These early returns are NOT\n    // the `useEffect` return that serves as a cleanup function\n\n    // If MetaMask is already active or there was already an error\n    // trying to activate MetaMask\n    if (active || error) {\n      // This function is a no-op in this case\n      return;\n    }\n\n    // If there's no injected provider present in the user's browser\n    if (!window.ethereum && !window.web3) {\n      // setError of no web3 directly here or let that error bubble up\n      // naturally by calling tryToSetConnector\n      console.log(\"No web3 injection detected\");\n      // TODO: Set this error properly\n      setError(new Error(\"No web3 injected\"));\n\n      return;\n    }\n\n    // The idea here is that on mobile, there definitely won't be MetaMask\n    // injected, even if there is an injected web3 provider\n    if (isMobile) {\n      // setError directly here rather than even doing tryToSetConnector\n      // If we want to support mobile web3-browser-wallet-apps in the future\n      // we can do tryToSetConnector here instead\n\n      console.log(\"On mobile, so no web3 connection will be established\");\n      // TODO: Subclass Error or set an error code explicitly here\n      setError(new Error(\"Mobile env\"));\n\n      return;\n    }\n\n    console.log(\"About to instantiate ethers.js provider in Web3ReactManager\");\n    console.log(\"window.ethereum\", window.ethereum);\n\n    if (!window.ethereum) {\n      // Handle legacy case where it's called web3 rather than ethereum\n      console.log(\"window.web3\", window.web3);\n    }\n\n    // TODO: Wrap this use of ethers in a try/catch\n    // while handling the variable declaration of library and typing properly\n    const library = new ethers.providers.Web3Provider(\n      window.ethereum || window.web3\n    );\n\n    // console.log({ library });\n\n    console.log(\"Just instantiated ethers.js provider in Web3ReactManager\");\n    const accounts = await library.listAccounts();\n\n    console.log(\"Number of accounts\", accounts.length);\n\n    if (accounts.length >= 1) {\n      console.log(\"At least one account, so trying to connect\");\n      tryToSetConnector(setConnector, setError);\n      return;\n    }\n\n    // Handle final case:\n    // ethereum or web3 already defined on window (web3 injected)\n    // Not mobile.\n    // But length of accounts was zero which is strange for MetaMask.\n\n    console.log(\"Hmm, there wasn't a single account. Weird.\");\n\n    // TODO: Subclass Error or set an error code explicitly here\n    // TODO: Only set error for no accounts if the user\n    // has enabled MetaMask\n    // setError(new Error(\"No accounts\"));\n  }\n\n  useEffect(() => {\n    // There's no returned function used\n    // for cleaning up this effect\n    // so the entire contents of this function\n    // can be the async function below\n    // TODO: Cancel web3 connection effect on rerender\n    // except for certain prop changes that don't warrant cancelation\n    connectToMetaMask();\n  });\n\n  // parse the error\n  useEffect(() => {\n    const unsetForWrongNetwork = async () => {\n      if (error) {\n        console.log(\"unsetForWrongNetwork\", error);\n        // if the user changes to the wrong network, unset the connector\n\n        const { errorCodes } = Connector;\n        const { UNSUPPORTED_NETWORK } = errorCodes;\n        if (error.code !== UNSUPPORTED_NETWORK) {\n          console.log(\"Other error code\");\n          return; // returning early\n        }\n        setError(new Error(\"Unsupported network\"));\n      }\n    };\n    // There's no returned function used\n    // for cleaning up this effect\n    // so the entire contents of this function\n    // can be the async function below\n    // TODO: Cancel web3 connection effect on rerender\n    // except for certain prop changes that don't warrant cancelation\n    unsetForWrongNetwork();\n  });\n\n  const [showLoader, setShowLoader] = useState(false);\n\n  // TODO: Do something less hacky than showing a loader for a fixed\n  // amount of time\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowLoader(true);\n    }, 600);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  if (shouldPreventRender) {\n    return null;\n  } else if (error) {\n    return (\n      <MessageWrapper>\n        <Message>{\"Unknown error\"}</Message>\n      </MessageWrapper>\n    );\n    // TODO: Decide whether it made sense\n    // to disable this active check\n    // } else if (!active) {\n    //   return showLoader ? (\n    //     <MessageWrapper>\n    //       <SpinnerWrapper src={Circle} />\n    //     </MessageWrapper>\n    //   ) : null;\n  } else {\n    return children;\n  }\n};\n\nexport default Web3ReactManager;\n","import React, { Suspense } from \"react\";\nimport FormProject from \"../components/stateful/FormProject\";\n\nimport Web3ReactManager from \"../components/stateful/Web3ReactManager\";\n\n// TODO: Upgrade ethers.js back to 4.0.39 (and eventually v5)\n\nexport default function CreateListing() {\n  return (\n    <Suspense fallback={null}>\n      <Web3ReactManager>\n        <FormProject />\n      </Web3ReactManager>\n    </Suspense>\n  );\n}\n","import React from \"react\";\n\n// TODO: Add a size prop\n\nconst Emoji: React.FC<{ label: string; symbol: string }> = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n);\n\nexport default Emoji;\n","import React from \"react\";\n\nimport { Box, Flex } from \"rebass\";\n\nimport Emoji from \"../presentational/Emoji\";\n\nconst DIM_OPACITY = 0.3;\nconst FULL_OPACITY = 1.0;\n\nconst VotingBox: React.FC<{\n  expirationDatetime: number;\n  tokensCommitted: number;\n  tokensToVoteWith: number;\n  status: string;\n}> = props => {\n  const {\n    expirationDatetime,\n    tokensCommitted,\n    // handleYes,\n    // handleNo,\n    // onTokenChange,\n    tokensToVoteWith,\n    status\n  } = props;\n  return (\n    <Flex flexWrap=\"wrap\" py={40} px={2} height=\"40%\">\n      <Box width={[1, 1 / 3, 1 / 3]}>\n        <p>\n          {/* TODO: Use moment, luxon, etc. to format time remaining */}\n          <b>Voting ends:</b> {expirationDatetime}\n        </p>\n        <p>\n          <b># of tokens committed so far:</b> {tokensCommitted}\n        </p>\n      </Box>\n      <Box width={[1, 1 / 3, 1 / 3]}>\n        <Flex justifyContent=\"center\">\n          <p>\n            <b>Select your position:</b>{\" \"}\n          </p>\n        </Flex>\n        <Flex justifyContent=\"center\">\n          <Box mx={4}>\n            <Box\n              p={2}\n              opacity={status === \"voting\" ? FULL_OPACITY : DIM_OPACITY}\n              bg={\"white\"}\n            >\n              <Emoji symbol=\"👎\" label=\"thumbs-down\" />\n            </Box>\n          </Box>\n          <Box mx={4}>\n            <Box\n              p={2}\n              opacity={status === \"voting\" ? FULL_OPACITY : DIM_OPACITY}\n              bg={status === \"voting\" ? \"primary\" : \"dimmed\"}\n            >\n              {/* TODO: Center the emoji in the box,  */}\n              {/* perhaps by putting a fixed padding/margin */}\n              {/* around it rather than trying to center it in a box */}\n              <Emoji symbol=\"🤩\" label=\"sheep\" />\n            </Box>\n          </Box>\n        </Flex>\n      </Box>\n      <Box width={[1, 1 / 3, 1 / 3]}>\n        <p>\n          <b>Commit tokens for your vote:</b>{\" \"}\n        </p>\n        {/* <TokenInput /> */}/ {tokensToVoteWith} tokens\n      </Box>\n    </Flex>\n  );\n};\n\nexport default VotingBox;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Box, Flex } from \"rebass\";\n\nimport Project from \"../components/presentational/Project\";\nimport VotingBox from \"../components/presentational/VotingBox\";\n\nimport { getProjectByIndex } from \"../helpers/helpers\";\n\nexport default function Proposal() {\n  const { slug } = useParams();\n  console.log({ slug });\n  const indexString = slug ? slug : \"0\";\n\n  const proposal = getProjectByIndex(indexString);\n  console.log(proposal);\n  return (\n    <Flex flexWrap=\"wrap\" px={2} alignItems=\"stretch\">\n      {/* TODO: Handle look when text wraps to two lines\n              or prevent that from happening */}\n      <Box width={[1]}>\n        <Project\n          name={proposal.name}\n          category={proposal.category}\n          tagline={proposal.tagline}\n          website={proposal.website}\n          twitter={proposal.twitter}\n          description={proposal.description}\n          type={proposal.type}\n          status={proposal.status}\n          index={proposal.index}\n        />\n      </Box>\n      <Box width={[1]} bg=\"muted\">\n        <VotingBox\n          expirationDatetime={1000000024}\n          tokensCommitted={24}\n          tokensToVoteWith={20}\n          status={proposal.status}\n        />\n      </Box>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Project from \"../presentational/Project\";\nimport { getProjectByIndex } from \"../../helpers/helpers\";\n\nimport { ProjectInterface } from \"../../types/ProjectInterface\";\n\nexport default function ProjectWrapper(props: any) {\n  const { slug } = useParams();\n  console.log({ slug });\n  const indexString = slug ? slug : \"0\";\n\n  const project: ProjectInterface = getProjectByIndex(indexString);\n  console.log(project);\n  return (\n    <Project\n      name={project.name}\n      category={project.category}\n      tagline={project.tagline}\n      website={project.website}\n      twitter={project.twitter}\n      description={project.description}\n      type={project.type}\n      index={project.index}\n    />\n  );\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function Application() {\n  const inputCategory = \"applications\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function Service() {\n  const inputCategory = \"services\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function InfrastructureSingle() {\n  const inputCategory = \"infrastructure\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\n\nimport ProjectWrapper from \"../../components/stateful/ProjectWrapper\";\n\nexport default function ContentSingle() {\n  const inputCategory = \"content\";\n  return <ProjectWrapper category={inputCategory} />;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { css } from \"emotion\";\n\nimport { useTheme } from \"emotion-theming\";\n\n// TODO: Potentially DRY this up and use it inside\n// StyledLink if this component will persist\n\nexport default function InlineStyledLink(props: any) {\n  const theme: any = useTheme();\n  return (\n    <Link\n      to={props.to}\n      className={css`\n        padding: 24px;\n        color: ${theme.colors.primary};\n        font-size: 16px;\n        border-radius: 4px;\n        text-decoration: none;\n        &:hover {\n          color: ${theme.colors.tertiary};\n        }\n      `}\n    >\n      {props.children}\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nimport { getOpenProposals } from \"../../helpers/helpers\";\n\nimport Spinner from \"../presentational/Spinner\";\n\nimport InlineStyledLink from \"../presentational/InlineStyledLink\";\n\nconst DOMAINS = gql`\n  {\n    domains(first: 10) {\n      name\n    }\n  }\n`;\n\nexport default function TheGraphFetch() {\n  // If we were using the data from The Graph yet,\n  // we would use the data variable as well\n  // const { loading, error, data } = useQuery(DOMAINS);\n  const { loading, error } = useQuery(DOMAINS);\n\n  if (loading) return <Spinner />;\n  if (error) return <p>Error</p>;\n\n  return (\n    <div>\n      {getOpenProposals().map(({ name, status, tagline, type, index }) => {\n        return (\n          <p key={index}>\n            {status === \"voting\" ? \"voting\" : \"queued\"}\n            <InlineStyledLink to={`/proposals/${index}`}>\n              {name}\n            </InlineStyledLink>\n            ({type}) {tagline}\n          </p>\n        );\n      })}\n      {/* {data.domains.map(({ name }: any) => (\n        <div key={name}>\n          <p>{name}</p>\n        </div>\n      ))} */}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport TheGraphFetch from \"../components/stateful/TheGraphFetch\";\n\nexport default function Proposals({ match }: any) {\n  return (\n    <div>\n      <h1>Proposals</h1>\n      <TheGraphFetch />\n    </div>\n  );\n}\n","import React, { useReducer } from \"react\";\n\nimport { Flex, Box } from \"rebass\";\nimport StyledLink from \"../presentational/StyledLink\";\n\nimport { Category } from \"../../types/Category\";\n\nimport {\n  getProjectsByCategory,\n  getProjectSubtypes\n} from \"../../helpers/helpers\";\n\n// TODO: Generalize this component to work for services, infrastructure, and content too, and just pass a type prop in\n\n// TODO: Make dynamic\ninterface ApplicationFilterState {\n  daos: boolean;\n  defi: boolean;\n  games: boolean;\n  social: boolean;\n  dex: boolean;\n  collectibles: boolean;\n}\n\ninterface ContentFilterState {\n  podcasts: boolean;\n  wikis: boolean;\n  events: boolean;\n  forums: boolean;\n  news: boolean;\n}\n\ninterface ServicesFilterState {\n  audits: boolean;\n  development: boolean;\n  legal: boolean;\n  design: boolean;\n  accounting: boolean;\n  pr: boolean;\n}\n\ninterface InfrastructureFilterState {\n  developmentframework: boolean;\n  sidechains: boolean;\n  userauthentication: boolean;\n  statechannels: boolean;\n  onboarding: boolean;\n  testing: boolean;\n}\n\nconst initialStateApplications: ApplicationFilterState = {\n  defi: true,\n  daos: true,\n  games: true,\n  social: true,\n  dex: true,\n  collectibles: true\n};\n\nconst initialStateInfrastructure: InfrastructureFilterState = {\n  developmentframework: true,\n  sidechains: true,\n  userauthentication: true,\n  statechannels: true,\n  onboarding: true,\n  testing: true\n};\n\nconst initialStateServices: ServicesFilterState = {\n  audits: true,\n  development: true,\n  legal: true,\n  design: true,\n  accounting: true,\n  pr: true\n};\n\nconst initialStateContent: ContentFilterState = {\n  podcasts: true,\n  wikis: true,\n  events: true,\n  forums: true,\n  news: true\n};\n\nconst initialState: any = {\n  applications: initialStateApplications,\n  infrastructure: initialStateInfrastructure,\n  services: initialStateServices,\n  content: initialStateContent\n};\n\nfunction getNonUserFacingSlug(projectName: string) {\n  return projectName.toLowerCase().replace(/\\s/g, \"\");\n}\n\nfunction filterReducer(state: any, action: any) {\n  console.log(action.type);\n  let newState;\n  // Used for setting all values at once\n  // based on query param\n  if (action.type.indexOf(\"single\") !== -1) {\n    console.log(\"Special action\");\n    return state;\n  } else {\n    // Used when user toggles\n    newState = {\n      ...state,\n      ...{\n        [action.type]: !state[action.type]\n      }\n    };\n    console.log(newState);\n    return newState;\n  }\n}\n\ninterface Props {\n  category: Category;\n  projectSubtype?: string;\n}\n\n// (No hyphens is more useful internally because it lets you directly use\n// the name as the key in an object without the editor getting upset)\n// function getNonUserFacingSlugFromUserFacing(projectName: string) {\n//   return projectName.toLowerCase().replace(/-/g, \"\");\n// }\n\nexport default function ProjectsWrapper({ category, projectSubtype }: Props) {\n  console.log({ projectSubtype });\n  const initialStateForCategory = initialState[category];\n  console.log({ initialStateForCategory });\n  const [state, dispatch] = useReducer(filterReducer, initialStateForCategory);\n\n  // TODO: Use React Router query param to determine initial state\n  // Do something like this but with useEffect so it's after\n  // the first render:\n  // if (!!projectSubtype) {\n  //   const projectSubtypeSlug = getNonUserFacingSlugFromUserFacing(\n  //     projectSubtype\n  //   );\n  //   dispatch({ type: `single-projectSubtypeSlug` });\n  // }\n  return (\n    <Flex flexWrap=\"wrap\">\n      <Box px={2} py={2} width={[1, 1 / 2, 3 / 4]}>\n        <h1>{category}</h1>\n        {getProjectsByCategory(category).map(({ name, index }) => {\n          // TODO: Start using an index from the object\n          // itself, and not using the index from the\n          // map operation\n          return (\n            <p key={index}>\n              <StyledLink to={`/${category}/${index}`}>{name}</StyledLink>\n            </p>\n          );\n        })}\n      </Box>\n      <Box px={2} py={2} width={[1, 1 / 2, 1 / 4]} bg=\"muted\">\n        <h3>Filters</h3>\n\n        <form>\n          {getProjectSubtypes(category).map((projectSubtype, index) => (\n            <p key={index}>\n              <label>\n                {projectSubtype}{\" \"}\n                <input\n                  name={projectSubtype}\n                  type=\"checkbox\"\n                  // TODO: Make checked use state\n                  checked={state[getNonUserFacingSlug(projectSubtype)]}\n                  onChange={e => {\n                    console.log(e.target);\n                    // Note: Right now the regex doesn't do anything\n                    // since the input is always forced to be one word\n                    // This may change if we want to handle spaces differently\n                    const actionName = `${getNonUserFacingSlug(\n                      projectSubtype\n                    )}`;\n                    dispatch({ type: actionName });\n                    // setEnabledTypes(e.target.value);\n                  }}\n                />\n              </label>\n            </p>\n          ))}\n        </form>\n      </Box>\n    </Flex>\n  );\n}\n","export enum Category {\n  SERVICES = \"services\",\n  INFRASTRUCTURE = \"infrastructure\",\n  CONTENT = \"content\",\n  APPLICATIONS = \"applications\"\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Applications({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.APPLICATIONS;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Services({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.SERVICES;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Infrastructure({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.INFRASTRUCTURE;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport ProjectsWrapper from \"../../components/stateful/ManyProjectsWrapper\";\n\nimport { Category } from \"../../types/Category\";\n\nexport default function Content({ location }: any) {\n  let params = new URLSearchParams(location.search);\n  const projectSubtype: string | null = params.get(\"projectSubtype\");\n  const category: Category = Category.CONTENT;\n\n  return projectSubtype ? (\n    <ProjectsWrapper category={category} projectSubtype={projectSubtype} />\n  ) : (\n    <ProjectsWrapper category={category} />\n  );\n}\n","import React from \"react\";\n\nimport StyledLink from \"./StyledLink\";\n\nimport { Box, Flex } from \"rebass\";\n\nconst widths = [1, 1 / 4, 1 / 8];\nconst verticalSpacing = 2;\n\n// The idea is we only want a lot of final vertical space\n// after the last one when each one is its own row on mobile\nconst widthsFinalElement = [1, 0, 0];\n\n// Hacky:\nconst widthsFinalElementLargeScreen = [0, 1, 1];\n\nconst WrappedLink: React.FC<{ url: string; label: string }> = ({\n  url,\n  label\n}) => {\n  return (\n    <Box width={widths} pt={verticalSpacing}>\n      <StyledLink to={url}>{label}</StyledLink>\n    </Box>\n  );\n};\n\nexport default function NavBar(props: any) {\n  return (\n    <Flex flexWrap=\"wrap\" px={2} color=\"white\" bg=\"black\" alignItems=\"center\">\n      {/* TODO: Handle look when text wraps to two lines */}\n      {/* or prevent that from happening */}\n      {/* For now we're preventing it from happening */}\n      {/* by carefully choosing wording and width on each screen size */}\n      <WrappedLink label=\"Everest\" url=\"/\" />\n      <Box mx=\"auto\" />\n      <WrappedLink label=\"New listing\" url=\"/create-listing\" />\n      <WrappedLink label=\"Proposals\" url=\"/proposals\" />\n      <WrappedLink label=\"About\" url=\"/about\" />\n      <Box width={widthsFinalElement} mt={verticalSpacing}></Box>\n      {/* Hacky: */}\n      <Box width={widthsFinalElementLargeScreen} mt={verticalSpacing / 2}></Box>\n    </Flex>\n  );\n}\n","import { Connectors } from \"web3-react\";\nimport { ErrorWithCode } from \"../types/ErrorWithCode\";\nconst { Connector, ErrorCodeMixin } = Connectors;\n\n// TODO: Consider using the InjectedConnector exported from\n// `web3-react` rather than this custom one.\n// https://github.com/NoahZinsmeister/web3-react/blob/latest/src/connectors/injected.ts\n\nconst InjectedConnectorErrorCodes = [\n  \"ETHEREUM_ACCESS_DENIED\",\n  \"NO_WEB3\",\n  \"UNLOCK_REQUIRED\"\n];\nexport default class InjectedConnector extends ErrorCodeMixin(\n  Connector,\n  InjectedConnectorErrorCodes\n) {\n  constructor(args = {}) {\n    super(args);\n    this.runOnDeactivation = [];\n\n    this.networkChangedHandler = this.networkChangedHandler.bind(this);\n    this.accountsChangedHandler = this.accountsChangedHandler.bind(this);\n\n    const { ethereum } = window;\n    if (ethereum && ethereum.isMetaMask) {\n      ethereum.autoRefreshOnNetworkChange = false;\n    }\n  }\n\n  async onActivation() {\n    const { ethereum, web3 } = window;\n\n    if (ethereum) {\n      await ethereum.enable().catch(error => {\n        const deniedAccessError: ErrorWithCode = Error(error);\n        deniedAccessError.code =\n          InjectedConnector.errorCodes.ETHEREUM_ACCESS_DENIED;\n        throw deniedAccessError;\n      });\n\n      // initialize event listeners\n      if (ethereum.on) {\n        ethereum.on(\"networkChanged\", this.networkChangedHandler);\n        ethereum.on(\"accountsChanged\", this.accountsChangedHandler);\n\n        this.runOnDeactivation.push(() => {\n          if (ethereum.removeListener) {\n            ethereum.removeListener(\n              \"networkChanged\",\n              this.networkChangedHandler\n            );\n            ethereum.removeListener(\n              \"accountsChanged\",\n              this.accountsChangedHandler\n            );\n          }\n        });\n      }\n    } else if (web3) {\n      console.warn(\n        \"Your web3 provider is outdated, please upgrade to a modern provider.\"\n      );\n    } else {\n      const noWeb3Error: ErrorWithCode = Error(\n        \"Your browser is not equipped with web3 capabilities.\"\n      );\n      noWeb3Error.code = InjectedConnector.errorCodes.NO_WEB3;\n      throw noWeb3Error;\n    }\n  }\n\n  async getProvider() {\n    const { ethereum, web3 } = window;\n    return ethereum || web3.currentProvider;\n  }\n\n  async getAccount(provider: any) {\n    const account = await super.getAccount(provider);\n\n    if (account === null) {\n      const unlockRequiredError: ErrorWithCode = Error(\n        \"Ethereum account locked.\"\n      );\n      unlockRequiredError.code = InjectedConnector.errorCodes.UNLOCK_REQUIRED;\n      throw unlockRequiredError;\n    }\n\n    return account;\n  }\n\n  onDeactivation() {\n    this.runOnDeactivation.forEach((runner: any) => runner());\n    this.runOnDeactivation = [];\n  }\n\n  // event handlers\n  networkChangedHandler(networkId: any) {\n    const networkIdNumber = Number(networkId);\n\n    try {\n      super._validateNetworkId(networkIdNumber);\n\n      super._web3ReactUpdateHandler({\n        updateNetworkId: true,\n        networkId: networkIdNumber\n      });\n    } catch (error) {\n      super._web3ReactErrorHandler(error);\n    }\n  }\n\n  accountsChangedHandler(accounts: any) {\n    if (!accounts[0]) {\n      const unlockRequiredError: ErrorWithCode = Error(\n        \"Ethereum account locked.\"\n      );\n      unlockRequiredError.code = InjectedConnector.errorCodes.UNLOCK_REQUIRED;\n      super._web3ReactErrorHandler(unlockRequiredError);\n    } else {\n      super._web3ReactUpdateHandler({\n        updateAccount: true,\n        account: accounts[0]\n      });\n    }\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Pages\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport CreateListing from \"./pages/CreateListing\";\n// ---\nimport Proposal from \"./pages/Proposal\";\nimport Application from \"./pages/Project/Application\";\nimport Service from \"./pages/Project/Service\";\nimport InfrastructureSingle from \"./pages/Project/InfrastructureSingle\";\nimport ContentSingle from \"./pages/Project/ContentSingle\";\n// ---\nimport Proposals from \"./pages/Proposals\";\nimport Applications from \"./pages/Projects/Applications\";\nimport Services from \"./pages/Projects/Services\";\nimport Infrastructure from \"./pages/Projects/Infrastructure\";\nimport Content from \"./pages/Projects/Content\";\n\n// Components\nimport NavBar from \"./components/presentational/NavBar\";\n\n// Providers\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport Web3Provider from \"web3-react\";\n\n// Connectors\nimport InjectedConnector from \"./web3-connectors/InjectedConnector\";\n\n// Other\nimport ApolloClient from \"apollo-boost\";\nimport theme from \"./theme\";\n\n// Finally using all of the above imports\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/ensdomains/ens\"\n});\n\nif (!process.env.REACT_APP_NETWORK_ID) {\n  console.log(`Network ID is NOT in .env file`);\n} else {\n  console.log(`Using network ID from .env file`);\n}\n\nif (!process.env.REACT_APP_NETWORK_URL) {\n  console.log(`Network URL is NOT in .env file`);\n} else {\n  console.log(`Using network URL from .env file`);\n}\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [Number(process.env.REACT_APP_NETWORK_ID || \"1\")]\n});\n\nconst connectors = { Injected };\n\n// function ContextProviders({ children }) {\n//   // TODO: Add any contexts the app needs here:\n//   return { children };\n// }\n\n// Note: Unlike some other dapps, explicitly making the choice not to set\n// up a web3 connection until the users needs it.\n// So it's established in the pages/components themselves\n// But since it's available via a React context, the needed info is still\n// available anywhere it's needed\n\nfunction AppRouter() {\n  // TODO: Put ContextProviders between Web3Provider and ApolloProvider\n  // once we start using it\n  return (\n    // Note: Wrapping the whole app in Web3Provider even though we don't set\n    // it up on the home page so that all pages and components can have access\n    // to the context as needed\n    // setConnector that activates the web3 connection isn't done here\n    <Web3Provider connectors={connectors} libraryName=\"ethers.js\">\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <div>\n              <NavBar />\n              <header>\n                <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/create-listing/\" component={CreateListing} />\n                  <Route path=\"/about/\" component={About} />\n\n                  <Route path=\"/proposals/:slug\" component={Proposal} />\n                  <Route path=\"/applications/:slug\" component={Application} />\n                  <Route path=\"/services/:slug\" component={Service} />\n                  <Route\n                    path=\"/infrastructure/:slug\"\n                    component={InfrastructureSingle}\n                  />\n                  <Route path=\"/content/:slug\" component={ContentSingle} />\n                  {/* Note: Proposal ^ must be before proposals */}\n                  {/* Note: Application ^ must be before applications */}\n\n                  <Route path=\"/proposals/\" component={Proposals} />\n                  <Route path=\"/applications/\" component={Applications} />\n                  <Route path=\"/services/\" component={Services} />\n                  <Route path=\"/infrastructure/\" component={Infrastructure} />\n                  <Route path=\"/content/\" component={Content} />\n                </Switch>\n              </header>\n            </div>\n          </Router>\n        </ThemeProvider>\n      </ApolloProvider>\n    </Web3Provider>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// TODO: Potentially include providers here wrather than in App component\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}